<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feelj.lean.english.word.dao.WordEnglishMapper">

    <insert id="insert" parameterType="com.feelj.lean.english.word.entity.WordEnglish">
        INSERT INTO `wordenglish` (`from_book`,`lesson`,`word`, `type`,`phonetic_symbol`,`translate`)
        VALUES (#{fromBook},#{lesson},#{word},#{type},#{phoneticSymbol},#{translate})
    </insert>

    <sql id="field_sql_all">
        id,from_book,lesson,word,phonetic_symbol,`type`,`translate`
    </sql>

    <select id="find" resultType="wordEnglish">
        select 
        <include refid="field_sql_all"/>
        from wordenglish
    </select>

    <select id="findList" parameterType="String" resultType="wordEnglish">
        select
            id,from_book,lesson,word,`phonetic_symbol`,`type`,`translate`
        from wordenglish
        <where>
            <if test="keyword!=null and keyword!=''">
                from_book like #{keyword}
                or lesson  like #{keyword}
                or word  like #{keyword}
                or `type`  like #{keyword}
                or `translate`  like #{keyword}
            </if>
        </where>

    </select>
    
    <select id="getById" parameterType="Integer" resultType="wordEnglish">
        select
        <include refid="field_sql_all"/>
        from wordenglish
        where id = #{id}
    </select>
    
    <insert id="saveWord" parameterType="wordView">
        insert into `wordenglish` (from_book,lesson,word,`phonetic_symbol`,`type`,`translate`)
        values (#{fromBook},#{lesson},#{word},#{type},#{phoneticSymbol},#{translate});
    </insert>
    
    <update id="updateWord" parameterType="wordView">
        UPDATE `wordenglish`
        <set>
            <if test="fromBook!=null and fromBook!=''">
                from_book = #{fromBook},
            </if>
            <if test="lesson!=null and lesson!=''">
                lesson = #{lesson},
            </if>
            <if test="word!=null and word!=''">
                word = #{word},
            </if>
            <if test="phoneticSymbol!=null and phoneticSymbol!=''">
                phonetic_symbol = #{phoneticSymbol},
            </if>
            <if test="type!=null and type!=''">
                `type` = #{type},
            </if>
            <if test="translate!=null and translate!=''">
                `translate` = #{translate},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="Integer">
        <if test="id !=null and id !=''">
            delete from wordenglish where id = #{id}
        </if>
    </delete>



    <select id="findMemorySource" resultType="wordEnglish">
        select
        id,from_book,lesson,word,phonetic_symbol,`type`,`translate`,loop_count,memory_time,memory_expression,expression_index
        from wordenglish where memory_time = #{memoryTime}
    </select>

    <select id="findSourceWord" resultType="wordEnglish">
        select
        id,from_book,lesson,word,phonetic_symbol,`type`,`translate`,loop_count,memory_time,memory_expression,expression_index
        from wordenglish where memory_time is null limit #{newLimit}
    </select>



    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update wordenglish
            <set>
                <if test="item.memoryTime !=null and item.memoryTime !=''">
                    memory_time = #{item.memoryTime,jdbcType=INTEGER},
                </if>
                <if test="item.expressionIndex !=null and item.expressionIndex !=''">
                    expression_index = #{item.expressionIndex,jdbcType=INTEGER}
                </if>
            </set>
            where id =#{item.id,jdbcType=INTEGER}
        </foreach>
    </update>




</mapper>